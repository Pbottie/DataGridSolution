@using DataGridProject.Components
@inject HttpClient Http

<PageTitle>DataGrid</PageTitle>

<h1>Datagrid</h1>

<p>This component demonstrates displaying data</p>

@if (testData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <DataGrid Items="FilteredData" IsPaginated class="table-striped w-100">
             <GridItem Field="@nameof(SearchMeasurementListItem.Id)" />
             <GridItem Title="GUID">
                 <ColumnTemplate>
                     <div class="d-flex align-items-center">
                         @context.MeasurementId
                         @context.FormattedStartDate
                     </div>
                     <div class="d-flex align-items-center">
                         @context.MeasurementPath
                         @context.TotalEffect
                     </div>
                 </ColumnTemplate>
                 <FilterTemplate>
                     <p>Min: <input type="range" @bind="minEffect" @bind:event="oninput" min="0" max="190" /> <span class="inline-block w-10">@minEffect</span></p>
                     <p>Max: <input type="range" @bind="maxEffect" @bind:event="oninput" min="@minEffect" max="200" /> <span class="inline-block w-10">@maxEffect</span></p>
                 </FilterTemplate>
             </GridItem>

             <GridItem Field="CustomerName" Title="Name" IsSortable IsFilterable />
         <GridItem Title="Cold" />
         <GridItem Field="@nameof(SearchMeasurementListItem.MeasurementName)" IsSortable IsFilterable />
         <GridItem Field="@nameof(SearchMeasurementListItem.BrandName)" />
     </DataGrid>

}

@code {

    private List<SearchMeasurementListItem> testData;

    double minEffect;
    double maxEffect = 200;

    List<SearchMeasurementListItem> FilteredData
    {
        get
        {
            var result = testData.Where(x => x.TotalEffect <= maxEffect);

            if (minEffect > 0)
                result = result.Where(x => x.TotalEffect >= minEffect);
            return result.ToList();
        }
    }


    protected override void OnInitialized()
    {
        testData = BogusData.GetData(103);
    }
}
