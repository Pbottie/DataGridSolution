@using DataGridProject.Components
@inject HttpClient Http

<PageTitle>DataGrid</PageTitle>

<h1>Datagrid</h1>

<p>This component demonstrates displaying data from the server.</p>

@if (testData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    //Usage with rendering directly from list of objects
    @* <DataGrid Items="testData" class="table-striped" /> *@

    //Usage with templated header
    <DataGrid Items="forecasts" class="table-striped">
        @* <GridColumn></GridColumn>  Header, Value, hardcoded *@
        @* <GridColumn></GridColumn>  Header, Value, hardcoded *@
     
            <GridItem Field="Id"></GridItem>
            <GridItem>Test3</GridItem>

        
    </DataGrid>
}

@code {
    private WeatherForecast[] forecasts;
    private List<SearchMeasurementListItem> testData;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
        testData = BogusData.GetData();
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);

        public string Summary { get; set; }
    }
}
